package main

import (
    "fmt"
    "os/exec"
    "testing"
)

func TestConnectToRouter11(t *testing.T) {
    // Command to list available containers
    psCommand := "sudo docker ps"

    // Execute the command to list available containers
    psOutput, err := exec.Command("sh", "-c", psCommand).Output()
    if err != nil {
        t.Errorf("Error executing docker ps command: %v", err)
        return
    }

    // Print the output of the docker ps command
    fmt.Println("Available containers:")
    fmt.Println(string(psOutput))

    // Command to log in to bash shell of the container
    loginCommand := "sudo docker exec clab-frrlab-router1 /bin/bash"

    // Execute the command to log in to the bash shell of the container
    loginOutput, err := exec.Command("sh", "-c", loginCommand).CombinedOutput()
    if err != nil {
        t.Errorf("Error logging in to the container: %v", err)
        return
    }

    // Print the output of the login command
    fmt.Println("Login output:")
    fmt.Println(string(loginOutput))

    // Command to log in to vtysh and execute show running-config
    vtyshCommand := "vtysh -c 'show running-config'"

    // Execute the command to log in to vtysh within the container's environment and show running-config
    vtyshOutput, err := exec.Command("sh", "-c", loginCommand+" -c '"+vtyshCommand+"'").CombinedOutput()
    if err != nil {
        t.Errorf("Error executing show running-config: %v", err)
        return
    }

    // Print the output of the show running-config command
    fmt.Println("Show running-config output:")
    fmt.Println(string(vtyshOutput))
}
